import "string"
#pragma link("mega65hyper.ld")
const char*RASTER=0xd012;
const char*VIC_MEMORY=0xd018;
const char* SCREEN=0x0400;
const char* BGCOL=0xd021;
const char* COLS=0xd800;
const char BLACK=0;
const char WHITE=1;
char[]MESSAGE="Checkpoint 4.1 by vinc0082!";
void exit_hypervisor(){
*(unsigned char *)$D67F = $01;
}
void main(){

}
void start_simple_program(){
*(unsigned char *)$0300=$80;
*(unsigned char *)$0301=$00;
*(unsigned char *)$0302=$81;
*(unsigned char *)$0303=$00;
*(unsigned char *)$0304=$00;
*(unsigned char *)$0305=$00;
*(unsigned char *)$0306=$00;
*(unsigned char *)$0307=$60;
*(unsigned char *)$0308=$02;
*(unsigned char *)$0309=$00;
*(unsigned char *)$030A=$02;
*(unsigned char *)$030B=$01;
*(unsigned char *)$030C=$08;
*(unsigned char *)$030D=$80;
*(unsigned char *)$030E=$00;
*(unsigned char *)$030F=$00;
*(unsigned char *)$0310=$00;
*(unsigned char *)$D701=$60;
*(unsigned char *)$D402=$03;
*(unsigned char *)$D405=$00;
*(unsigned char *)$0300=$00;
*(unsigned short *)$D648=$080D;
exit_hypervisor();
}

void reset(){
*VIC_MEMORY=0x14;
memset(SCREEN,' ',40*25);
memset(COLS,WHITE,40*25);
char* sc=SCREEN+40;
char* msg=MESSAGE;

while(*msg){
*sc++=*msg++;
}
start_simple_program();
}
void pagfault(){
}
void restorkey(){
}
void alttabkey(){
}
void vf011rd(){
}
void vf011wr(){
}
void reserved(){
}
void cpukil(){
}
void syscall00(){
*(SCREEN+79)=')';
}
void syscall01(){
*(SCREEN+78)='(';
}
void syscall02(){
*(SCREEN+79)=')';
}
void syscall03(){
*(SCREEN+78)='(';
}
void syscall04(){
*(SCREEN+79)=')';
}
void syscall05(){
*(SCREEN+78)='(';
}
void syscall06(){
*(SCREEN+79)=')';
}
void syscall07(){
*(SCREEN+78)='(';
}
void syscall08(){
*(SCREEN+79)=')';
}
void syscall09(){
*(SCREEN+78)='(';
}
void syscall0A(){
*(SCREEN+79)=')';
}
void syscall0B(){
*(SCREEN+78)='(';
}
void syscall0C(){
*(SCREEN+79)=')';
}
void syscall0D(){
*(SCREEN+78)='(';
}
void syscall0E(){
*(SCREEN+79)=')';
}
void syscall0F(){
*(SCREEN+78)='(';
}
void syscall10(){
*(SCREEN+79)=')';
}
void securentr(){
*(SCREEN+78)='(';
}
void securexit(){
*(SCREEN+79)=')';
}

void syscall13(){
*(SCREEN+79)=')';
}
void syscall14(){
*(SCREEN+78)='(';
}
void syscall15(){
*(SCREEN+79)=')';
}
void syscall16(){
*(SCREEN+78)='(';
}
void syscall17(){
*(SCREEN+78)='(';
}
void syscall18(){
*(SCREEN+79)=')';
}
void syscall19(){
*(SCREEN+78)='(';
}
void syscall1A(){
*(SCREEN+78)='(';
}
void syscall1B(){
*(SCREEN+78)='(';
}
void syscall1C(){
*(SCREEN+79)=')';
}
void syscall1D(){
*(SCREEN+78)='(';
}
void syscall1E(){
*(SCREEN+78)='(';
}
void syscall1F(){
*(SCREEN+78)='(';
}
void syscall20(){
*(SCREEN+79)=')';
}
void syscall21(){
*(SCREEN+78)='(';
}
void syscall22(){
*(SCREEN+79)=')';
}
void syscall23(){
*(SCREEN+78)='(';
}
void syscall24(){
*(SCREEN+79)=')';
}
void syscall25(){
*(SCREEN+78)='(';
}
void syscall26(){
*(SCREEN+79)=')';
}
void syscall27(){
*(SCREEN+78)='(';
}
void syscall28(){
*(SCREEN+79)=')';
}
void syscall29(){
*(SCREEN+78)='(';
}
void syscall2A(){
*(SCREEN+79)=')';
}
void syscall2B(){
*(SCREEN+78)='(';
}
void syscall2C(){
*(SCREEN+79)=')';
}
void syscall2D(){
*(SCREEN+78)='(';
}
void syscall2E(){
*(SCREEN+79)=')';
}
void syscall2F(){
*(SCREEN+78)='(';
}
void syscall30(){
*(SCREEN+79)=')';
}
void syscall31(){
*(SCREEN+78)='(';
}
void syscall32(){
*(SCREEN+79)=')';
}
void syscall33(){
*(SCREEN+78)='(';
}
void syscall34(){
*(SCREEN+79)=')';
}
void syscall35(){
*(SCREEN+78)='(';
}
void syscall36(){
*(SCREEN+79)=')';
}
void syscall37(){
*(SCREEN+78)='(';
}
void syscall38(){
*(SCREEN+79)=')';
}
void syscall39(){
*(SCREEN+78)='(';
}
void syscall3A(){
*(SCREEN+79)=')';
}
void syscall3B(){
*(SCREEN+78)='(';
}
void syscall3C(){
*(SCREEN+79)=')';
}
void syscall3D(){
*(SCREEN+78)='(';
}
void syscall3E(){
*(SCREEN+79)=')';
}
void syscall3F(){
*(SCREEN+78)='(';
}
#pragma data_seg(Syscall)
struct Syscall{
char xjmp;
void()*syscall;
char xnop;
};
const char JMP=0x4c;
const char NOP=0xea;
export struct Syscall[] SYSCALLS={
{JMP,&syscall00,NOP},
{JMP,&syscall01,NOP},
{JMP,&syscall02,NOP},
{JMP,&syscall03,NOP},
{JMP,&syscall04,NOP},
{JMP,&syscall05,NOP},
{JMP,&syscall06,NOP},
{JMP,&syscall07,NOP},
{JMP,&syscall08,NOP},
{JMP,&syscall09,NOP},
{JMP,&syscall0A,NOP},
{JMP,&syscall0B,NOP},
{JMP,&syscall0C,NOP},
{JMP,&syscall0D,NOP},
{JMP,&syscall0E,NOP},
{JMP,&syscall0F,NOP},
{JMP,&syscall10,NOP},
{JMP,&securentr,NOP},
{JMP,&securexit,NOP},
{JMP,&syscall13,NOP},
{JMP,&syscall14,NOP},
{JMP,&syscall15,NOP},
{JMP,&syscall16,NOP},
{JMP,&syscall17,NOP},
{JMP,&syscall18,NOP},
{JMP,&syscall19,NOP},
{JMP,&syscall1A,NOP},
{JMP,&syscall1B,NOP},
{JMP,&syscall1C,NOP},
{JMP,&syscall1D,NOP},
{JMP,&syscall1E,NOP},
{JMP,&syscall1F,NOP},
{JMP,&syscall20,NOP},
{JMP,&syscall21,NOP},
{JMP,&syscall22,NOP},
{JMP,&syscall23,NOP},
{JMP,&syscall24,NOP},
{JMP,&syscall25,NOP},
{JMP,&syscall26,NOP},
{JMP,&syscall27,NOP},
{JMP,&syscall28,NOP},
{JMP,&syscall29,NOP},
{JMP,&syscall2A,NOP},
{JMP,&syscall2B,NOP},
{JMP,&syscall2C,NOP},
{JMP,&syscall2D,NOP},
{JMP,&syscall2E,NOP},
{JMP,&syscall2F,NOP},
{JMP,&syscall30,NOP},
{JMP,&syscall31,NOP},
{JMP,&syscall32,NOP},
{JMP,&syscall33,NOP},
{JMP,&syscall34,NOP},
{JMP,&syscall35,NOP},
{JMP,&syscall36,NOP},
{JMP,&syscall37,NOP},
{JMP,&syscall38,NOP},
{JMP,&syscall39,NOP},
{JMP,&syscall3A,NOP},
{JMP,&syscall3B,NOP},
{JMP,&syscall3C,NOP},
{JMP,&syscall3D,NOP},
{JMP,&syscall3E,NOP},
{JMP,&syscall3F,NOP}

};
export align(0x100) struct Syscall[] SYSCALL_RESET={

{JMP,&reset,NOP},
{JMP,&pagfault,NOP},
{JMP,&restorkey,NOP},
{JMP,&alttabkey,NOP},
{JMP,&vf011rd,NOP},
{JMP,&vf011wr,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&reserved,NOP},
{JMP,&cpukil,NOP}
};